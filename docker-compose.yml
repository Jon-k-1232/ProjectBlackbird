version: '3.9'

networks:
  ds1_network:
    driver: bridge

services:
  # Frontend
  app:
    # container_name: DS1_Frontend
    environment:
      - TZ=America/Phoenix
    build:
      context: ./ProjectBlackBird_Frontend
      dockerfile: Dockerfile
    ports:
      - '3000-3002:3000'
    env_file:
      - ./ProjectBlackBird_Frontend/.env
    volumes:
      - './ProjectBlackBird_Frontend:/app'
      - '/app/node_modules'
    stdin_open: true
    tty: true
    restart: always
    networks:
      - ds1_network

  # Backend
  api:
    # container_name: DS1_Backend
    environment:
      - TZ=America/Phoenix
    build:
      context: ./ProjectBlackBird_Backend
      dockerfile: Dockerfile
    ports:
      - '8000-8002:8000'
    env_file:
      - ./ProjectBlackBird_Backend/.env
    volumes:
      - '/app/node_modules'
      - './ProjectBlackBird_Backend:/app'
      - './Nginx/Server_ssl/192.168.12.209.crt:/app/ssl/192.168.12.209.crt'
      - './Nginx/Server_ssl/192.168.12.209.key:/app/ssl/192.168.12.209.key'
    restart: always
    networks:
      - ds1_network

  # Server
  server:
    container_name: DS1_Server
    environment:
      - TZ=America/Phoenix
    image: nginx
    depends_on:
      - api
      - app
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - '80:80'
    volumes:
      - './Nginx/Server_ssl/192.168.12.209.crt:/etc/nginx/192.168.12.209.crt'
      - './Nginx/Server_ssl/192.168.12.209.key:/etc/nginx/192.168.12.209.key'
      - './Nginx/default.conf:/etc/nginx/conf.d/default.conf'
    restart: always
    networks:
      - ds1_network
