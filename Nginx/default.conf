# React frontend
upstream app {
    # ip of app container
    server 172.16.0.2:3000;
}

# Nodejs Backend
upstream api {
    # ip of api container 
    server 172.16.0.6:8000;
}

#Nginx Serve http redirect to https
server {
    listen 80;
    listen [::]:80;

    server_name 192.168.0.119;

    return 302 https://$server_name$request_uri;
}

#Nginx server
server {
    # listen 80;
    # listen [::]:80;
    listen      443 ssl;
    listen      [::]:443 ssl;
    ssl_certificate     /etc/nginx/192.168.12.209.crt;
    ssl_certificate_key     /etc/nginx/192.168.12.209.key;

    # if a reverse proxy is to be used dont forget to update to web address
    # ip of local host serving content
    server_name 192.168.0.119;

    location / {
        proxy_pass http://app;
        
        # allow 192.168.12.209;
        # allow 192.168.12.148;
        # allow 172.16.0.0/10;
        # deny all;
    }

    # location /auth-proxy{
    #     proxy_pass_request_headers off;
    #     proxy_set_header Authorization $http authorization; # If using Basic auth
    # }
    
    location /sockjs-node {
        proxy_pass http://app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;

        # allow 192.168.12.209;
        # allow 192.168.12.148;
        # allow 172.16.0.0/10;
        # deny all;
        
        # Look at possibly upgrading to Http/2.0
        # https://www.tecmint.com/enable-http-2-in-nginx/
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
    }
}

